{"version":3,"sources":["components/Provider.js","pages/AddConsent.js","pages/ListConsent.js","App.js","index.js"],"names":["Provider","this","props","contract","provider_id","name","address","phone","consentInfo","title","layout","bordered","Item","label","style","marginTop","type","Component","Web3","require","AddConsent","state","result","consent_status","loading","provider_search","e","a","preventDefault","setState","feedbackMessage","web3","window","ethereum","eth","Contract","JSON","parse","process","request","method","accounts","methods","providers_info","call","error","from","message","change_consent","new_consent","send","to","chainId","className","onSubmit","Group","compact","width","textAlign","borderRight","placeholder","onChange","target","value","icon","onClick","tip","size","ListConsent","retrieve","list_providers","values","timestamp","length","i","prevState","id","street","consent_info","console","log","map","el","key","bind","createUI","App","logged_in","login","document","detectEthereumProvider","provider","alert","margin","color","fontSize","mode","position","display","justifyContent","exact","path","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.fe80386c.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Card, Descriptions } from \"antd\"\r\n\r\nclass Provider extends Component {\r\n    render() {\r\n        const {\r\n            provider_id,\r\n            name,\r\n            address,\r\n            phone,\r\n            consentInfo\r\n        } = this.props.contract\r\n        return (\r\n            <Card title= {\"Provider's Identifier: \" + provider_id} >\r\n                <Descriptions layout=\"vertical\" bordered>\r\n                    <Descriptions.Item label=\"Name\">{name}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Address\">{address}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Phone number\">{phone}</Descriptions.Item>\r\n                </Descriptions>\r\n                <Card style={{ marginTop: 16 }}  type=\"inner\" title=\"Consent Information\" >\r\n                {consentInfo}\r\n                </Card>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Provider\r\n","import React, { Component } from \"react\"\r\nimport { Button, Form, Input, PageHeader, Spin} from \"antd\"\r\nimport Provider from \"../components/Provider\"\r\nconst Web3 = require(\"web3\");\r\n\r\nclass AddConsent extends Component {\r\n\r\n    state = {\r\n        result: null,\r\n        provider_id:null,\r\n        consent_status:null,\r\n        loading: null\r\n    }\r\n\r\n    /**\r\n     * Searching for provider's info\r\n     *  \r\n     */\r\n    provider_search = async e => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            this.setState({feedbackMessage: null});\r\n            const web3 = new Web3(window.ethereum);\r\n            const contract = new web3.eth.Contract(JSON.parse(process.env.REACT_APP_ABI), \r\n                                                   process.env.REACT_APP_CONTRACT_ADDR);\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n            //calling mapping providers_info\r\n            await contract.methods.providers_info(this.state.provider_id).call({}, (error, result) => {                                        \r\n                this.setState(  { result: \r\n                                    { provider_id:this.state.provider_id,\r\n                                      name:  result['name'],\r\n                                      address: result['street'],\r\n                                      phone:   result['phone'],\r\n                                      consentInfo: result['consent_info'],      \r\n                                    }\r\n                                } );\r\n            });\r\n            \r\n            //if the 'from' key is removed from the call function, then nothing works because the smart contract will not know who user.sender is\r\n            await contract.methods.consent_status(this.state.provider_id).call({from:accounts[0]}, (error, result) => {          \r\n                this.setState({consent_status:result});\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.setState({result:null});\r\n            this.setState({feedbackMessage: \"Error: \"+ error.message});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changing the consent status of the provider\r\n     * \r\n     */\r\n    change_consent = async e => {\r\n        e.preventDefault();\r\n\r\n        const new_consent = !this.state.consent_status\r\n        \r\n        this.setState({loading:true});     \r\n        this.setState({feedbackMessage: null});\r\n       \r\n        try {\r\n            const web3 = new Web3(window.ethereum);  \r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });          \r\n            const contract = new web3.eth.Contract(JSON.parse(process.env.REACT_APP_ABI), \r\n                                                   process.env.REACT_APP_CONTRACT_ADDR);\r\n\r\n            await contract.methods.change_consent(this.state.provider_id, new_consent).send({\r\n                from:accounts[0],\r\n                to: process.env.REACT_APP_CONTRACT_ADDR,\r\n                chainId: 5, //Goerli\r\n            })\r\n            this.setState({consent_status:new_consent});\r\n            \r\n            if(new_consent){\r\n                this.setState({feedbackMessage: \"Sucessfully granted consent\"});\r\n            }\r\n            else {\r\n                this.setState({feedbackMessage: \"Sucessfully revoked consent\"});\r\n            }\r\n        }\r\n        catch (error) { //code error\r\n            this.setState({feedbackMessage: \"Error: \"+ error.message});         \r\n        }\r\n        finally {\r\n            this.setState({loading:false});       \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rendering\r\n     * @returns \r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PageHeader className=\"header-container\" title=\"Search for Provider\" />\r\n                <Form className=\"container\" onSubmit={this.provider_search}>\r\n                    <Input.Group compact className=\"container\">\r\n                        <Input\r\n                            style={{ width: 400, textAlign: \"center\", borderRight: 0}}\r\n                            placeholder=\"Provider's Identifier\"\r\n                            onChange={e => this.setState({ provider_id: e.target.value })}\r\n                        />\r\n                        <Button icon=\"search\" type=\"primary\" onClick={this.provider_search} >Search</Button>\r\n                        <br /><br />\r\n                    </Input.Group>\r\n                    {this.state.result && ( <Provider contract={this.state.result} /> )}\r\n                    <br /><br />\r\n                    {this.state.result && !this.state.consent_status &&  (<Button icon=\"user-add\" type=\"primary\" onClick={this.change_consent} > Consent  </Button>)}\r\n                    {this.state.result && this.state.consent_status && (<Button icon=\"user-delete\" type=\"primary\" onClick={this.change_consent} > Revoke  </Button>)}\r\n                    <br/><br/><br/>\r\n                    {this.state.loading && <center> <Spin tip = \"Blockchain is processing the transaction\" size=\"large\" /> </center>  }\r\n                    <br/><br/><br/>\r\n                    {this.state.feedbackMessage && <center><h3 className=\"error\"> { this.state.feedbackMessage } </h3> </center>}\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddConsent\r\n","import React, { Component } from \"react\"\r\nimport { Button, Form} from \"antd\"\r\nimport Provider from \"../components/Provider\"\r\nconst Web3 = require(\"web3\");\r\n\r\nclass ListConsent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { values: [],\r\n                       provider_id: [],\r\n                       name: [],\r\n                       address:[],\r\n                       phone: [],\r\n                       consentInfo:[],\r\n                       timestamp:[],\r\n                       feedbackMessage:null\r\n                    };\r\n    }\r\n    \r\n    createUI(){\r\n        return this.state.values.map((el, i) => \r\n            <div key={i}>                 \r\n                <Provider contract={{ provider_id:this.state.provider_id[i], \r\n                                      name: this.state.name[i], \r\n                                      address: this.state.address[i], \r\n                                      phone: this.state.phone[i], \r\n                                      consentInfo: this.state.consentInfo[i]}} />\r\n                <br /><br /> \r\n             </div>          \r\n         )\r\n      }\r\n         \r\n    retrieve = async e => {\r\n        try{\r\n            const web3 = new Web3(window.ethereum);\r\n            var contract = new web3.eth.Contract(JSON.parse(process.env.REACT_APP_ABI), \r\n                                                 process.env.REACT_APP_CONTRACT_ADDR);\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n            //if the 'from' key is removed from the call function, then nothing works because the smart contract will not know who user.sender is\r\n            await contract.methods.list_providers().call({from:accounts[0]}, (error, result) => {    \r\n                this.setState({values: [],  provider_id: [], name: [],  address:[], phone: [], consentInfo:[], timestamp:[]});      \r\n              \r\n                if (result.length == 0) {\r\n                    this.setState({feedbackMessage:true});\r\n                }\r\n                else {\r\n                    this.setState({feedbackMessage:false});\r\n                    for (var i = 0; i < result.length; i++) {    \r\n                        this.setState(prevState => ({ values: [...prevState.values, '']}));\r\n                        this.setState(prevState => ({ provider_id: [...prevState.provider_id,  result[i].id]}));\r\n                        this.setState(prevState => ({ name: [...prevState.name,  result[i].name]}));\r\n                        this.setState(prevState => ({ address: [...prevState.address,  result[i].street]}));\r\n                        this.setState(prevState => ({ phone: [...prevState.phone,  result[i].phone]}));\r\n                        this.setState(prevState => ({ consentInfo: [...prevState.consentInfo,  result[i].consent_info]}));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n          console.log(error)\r\n        }\r\n    }      \r\n         \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form className=\"container\">\r\n                    <center>   \r\n                    <br />                       \r\n                    <Button icon=\"bars\" type=\"primary\" onClick={this.retrieve.bind(this)} > Retrieve Providers  </Button>\r\n                    <br /><br />\r\n                    </center>\r\n                    {this.createUI()}        \r\n                    <br/><br/>\r\n                    {this.state.feedbackMessage &&  <center><h3 className=\"error\"> No provider has been granted consent. </h3></center> }\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListConsent\r\n","import React, { Component } from \"react\"\r\nimport { HashRouter as Router, Link, Route, Switch, Redirect } from \"react-router-dom\"\r\nimport { Icon, Menu, Button}        from \"antd\" //list of items available at https://3x.ant.design/components/icon/\r\nimport AddConsent          from \"./pages/AddConsent\"\r\nimport ListConsent       from \"./pages/ListConsent\"\r\nimport \"./App.css\"\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            logged_in: null,\r\n        };\r\n    \r\n        this.login = this.login.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = 'Online Consent Management';\r\n    }\r\n\r\n    async login(){\r\n\r\n        const provider = await detectEthereumProvider();\r\n\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            console.log('Wallet is installed!');\r\n        }\r\n        else{\r\n            console.log(\"Wallet is not installed\")\r\n        }\r\n\r\n        if (provider) {\r\n            // From now on, this should always be true: provider === window.ethereum\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            const chainId  = await window.ethereum.request({ method: 'eth_chainId' });\r\n\r\n            if (chainId != 0x5) {\r\n                alert('Please change the network to Goerli');\r\n            }\r\n            else {\r\n                console.log(\"Login successful\");\r\n                console.log(\"User id: \" + accounts[0]);\r\n                console.log(\"Chain id: \" + chainId);\r\n                this.setState({ logged_in: true }); \r\n            }\r\n        } \r\n        else {\r\n            alert('Please install MetaMask!');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"nav-container\">\r\n                    <h1 style={{textAlign: \"center\", margin: 0, color: \"#1890ff\", fontSize: 32}}>\r\n                        Online Consent Management\r\n                    </h1>\r\n                     {this.state.logged_in &&   <Menu mode=\"horizontal\" style={{position: 'relative', display: 'flex', justifyContent: 'center'}} className=\"nav\">\r\n                                                    <Menu.Item key=\"search\">\r\n                                                        <Link to=\"/add\">\r\n                                                            <Icon type=\"search\" />\r\n                                                            Search for Provider\r\n                                                        </Link>\r\n                                                    </Menu.Item>                                                    \r\n                                                    <Menu.Item key=\"retrieve\">\r\n                                                        <Link to=\"/list\">\r\n                                                            <Icon type=\"unordered-list\" />\r\n                                                            List Providers\r\n                                                        </Link>\r\n                                                    </Menu.Item>\r\n                                                </Menu>}\r\n                </div>\r\n                <Switch>\r\n                    <Route exact path =\"/\">\r\n                        {this.state.logged_in ? <Redirect to=\"/add\" />:<div>\r\n                                                                            <br />\r\n                                                                            <center><Button icon=\"deployment-unit\" type=\"primary\" onClick={this.login} >Connect</Button> <br /><br /></center>\r\n                                                                            <Link to=\"/remove\" />\r\n                                                                        </div>\r\n                        }\r\n                    </Route>\r\n                    {this.state.logged_in &&  //route is only valid if logged in\r\n                        <Route\r\n                            path=\"/add\"\r\n                            render={() => (<AddConsent />)}\r\n                        />\r\n                    }\r\n                    {this.state.logged_in && //route is only valid if logged in\r\n                        <Route\r\n                            path=\"/list\"\r\n                            render={() => (<ListConsent />)}\r\n                        />\r\n                    }          \r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}